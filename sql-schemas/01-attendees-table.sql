-- Create attendees table for the reunion registration system
CREATE TABLE IF NOT EXISTS public."Attendees" (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT NOW(),
    updated_at timestamp with time zone NOT NULL DEFAULT NOW(),
    first_name character varying NOT NULL DEFAULT ''::character varying,
    last_name character varying NOT NULL DEFAULT ''::character varying,
    email character varying NOT NULL DEFAULT ''::character varying,
    phone_number character varying NOT NULL DEFAULT ''::character varying,
    occupation character varying NULL,
    employer character varying NULL,
    allow_contact boolean NOT NULL DEFAULT false,
    checked_in boolean NOT NULL DEFAULT false,
    CONSTRAINT Attendee_pkey PRIMARY KEY (id),
    CONSTRAINT Attendee_email_key UNIQUE (email)
) TABLESPACE pg_default;

-- Create indexes for performance
CREATE INDEX IF NOT EXISTS idx_attendees_email ON public."Attendees"(email);
CREATE INDEX IF NOT EXISTS idx_attendees_created_at ON public."Attendees"(created_at);
CREATE INDEX IF NOT EXISTS idx_attendees_checked_in ON public."Attendees"(checked_in);

-- Create function to automatically update updated_at timestamp
CREATE OR REPLACE FUNCTION update_attendee_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Create trigger to automatically update updated_at column
CREATE TRIGGER update_attendees_updated_at 
    BEFORE UPDATE ON public."Attendees" 
    FOR EACH ROW 
    EXECUTE FUNCTION update_attendee_updated_at();
